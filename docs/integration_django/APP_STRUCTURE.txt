══════════════════════════════════════════════════════════════════════
📦 APP: stations
══════════════════════════════════════════════════════════════════════
📄 VIEWS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/stations/views/
├── __init__.py                # Router merge
├── core_views.py              # Core station operations - list, nearby, and detail views (3 classes)
│   ├── StationListView
│   ├── NearbyStationsView
│   └── StationDetailView
├── interaction_views.py       # User interactions - favorite toggle and issue reporting (2 classes)
│   ├── StationFavoriteView
│   └── StationReportIssueView
└── user_views.py              # User-specific operations - favorites and reports listing (2 classes)
    ├── UserFavoriteStationsView
    └── UserStationReportsView

Total: 3 files, 7 view classes

══════════════════════════════════════════════════════════════════════
📄 Models 
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/stations/models.py


⚙️  SERVICES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/stations/services/
├── __init__.py                    # Exports
├── power_bank_service.py          # Service for power bank operations - handles assignments and returns for rentals
============================================================

This module contains service classes for service for power bank operations - handles assignments and returns for rentals.

Auto-generated by Service Separator
Date: 2025-10-18 23:01:23
│   └── PowerBankService
│       ├── assign_power_bank_to_rental()
│       └── return_power_bank()
├── station_favorite_service.py    # Service for station favorites
============================================================

This module contains service classes for service for station favorites.

Auto-generated by Service Separator
Date: 2025-10-18 23:01:23
│   └── StationFavoriteService
│       ├── toggle_favorite()
│       └── get_user_favorites()
├── station_issue_service.py       # Service for station issues
============================================================

This module contains service classes for service for station issues.

Auto-generated by Service Separator
Date: 2025-10-18 23:01:23
│   └── StationIssueService
│       ├── report_issue()
│       └── get_user_reported_issues()
└── station_service.py             # Service for station operations
============================================================

This module contains service classes for service for station operations.

Auto-generated by Service Separator
Date: 2025-10-18 23:01:23
    └── StationService
        ├── get_stations_list()
        ├── get_station_detail()
        ├── get_nearby_stations()
        ├── _get_nearby_stations()
        ├── create_station()
        └── update_station_status()

Total: 4 files, 4 service classes, 12 methods

📋 SERIALIZERS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/stations/serializers.py          # Single file (276 lines)
├── User Serializers
│   ├── UserFavoriteStationsResponseSerializer
│   └── UserStationReportsResponseSerializer
└── Station Serializers
    ├── StationAmenitySerializer
    ├── StationSlotSerializer
    ├── StationMediaSerializer
    ├── StationAmenityMappingSerializer
    ├── StationListSerializer
    ├── StationDetailSerializer
    ├── StationIssueSerializer
    ├── StationIssueCreateSerializer
    ├── NearbyStationsSerializer
    ├── StationListResponseSerializer
    ├── StationDetailResponseSerializer
    ├── StationFavoriteResponseSerializer
    └── StationIssueResponseSerializer

Total: 1 file, 15 serializers (2 categories)



══════════════════════════════════════════════════════════════════════
📦 APP: rentals
══════════════════════════════════════════════════════════════════════

📄 VIEWS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/rentals/views/
├── __init__.py                # Router merge
├── core_views.py              # Core rental operations - start, cancel, extend, and active rental (4 classes)
│   ├── RentalStartView
│   ├── RentalCancelView
│   ├── RentalExtendView
│   └── RentalActiveView
├── history_views.py           # Rental history and user statistics (2 classes)
│   ├── RentalHistoryView
│   └── RentalStatsView
├── package_views.py           # Rental packages and related information (1 classes)
│   └── RentalPackageView
└── support_views.py           # Support operations - issues, location tracking, and payments (3 classes)
    ├── RentalPayDueView
    ├── RentalIssueView
    └── RentalLocationView

Total: 4 files, 10 view classes


══════════════════════════════════════════════════════════════════════
📄 Models 
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/stations/models.py


⚙️  SERVICES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/rentals/services/
├── __init__.py                    # Exports
├── rental_analytics_service.py    # RentalAnalyticsService - Analytics & Statistics Service
============================================================

Provides comprehensive analytics and statistics for rentals.

Business Logic:
- Calculate rental statistics and metrics
- Track revenue and usage patterns
- Identify popular packages and stations
- Analyze user rental behavior
- Generate reports for admin dashboards

Author: Service Splitter (Cleaned)
Date: 2025-10-17
│   └── RentalAnalyticsService
│       ├── get_rental_analytics()
│       ├── _calculate_basic_stats()
│       ├── _calculate_revenue_stats()
│       ├── _calculate_duration_stats()
│       ├── _calculate_return_rate()
│       └── _get_popular_items()
├── rental_issue_service.py        # RentalIssueService - Issue Reporting Service
============================================================

Handles reporting and management of rental issues.

Business Logic:
- Report powerbank or rental issues
- Track issue status (reported, in progress, resolved)
- Notify admins of reported issues
- Maintain issue history for quality control

Author: Service Splitter (Cleaned)
Date: 2025-10-17
│   └── RentalIssueService
│       ├── report_issue()
│       └── _notify_admins_of_issue()
├── rental_location_service.py     # RentalLocationService - Location Tracking Service
============================================================

Handles GPS location tracking for active rentals.

Business Logic:
- Track powerbank location during active rentals
- Update location coordinates with accuracy
- Log location history for analytics

Author: Service Splitter (Cleaned)
Date: 2025-10-17
│   └── RentalLocationService
│       └── update_location()
└── rental_service.py              # RentalService - Individual Service File
============================================================

Service for rental operations

Auto-generated by Service Splitter
Date: 2025-10-17
    └── RentalService
        ├── start_rental()
        ├── _validate_rental_prerequisites()
        ├── _validate_station_availability()
        ├── _get_available_power_bank_and_slot()
        ├── _process_prepayment()
        ├── cancel_rental()
        ├── extend_rental()
        ├── return_power_bank()
        ├── _calculate_postpayment_charges()
        ├── _calculate_overdue_charges()
        ├── get_user_rentals()
        ├── get_active_rental()
        └── get_rental_stats()

Total: 4 files, 4 service classes, 22 methods

📋 SERIALIZERS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
api/rentals/serializers.py          # Single file (612 lines)
└── Rental Serializers
    ├── RentalPackageListSerializer
    ├── RentalListSerializer
    ├── RentalDetailSerializer
    ├── RentalExtensionSerializer
    ├── RentalIssueSerializer
    ├── RentalLocationSerializer
    ├── RentalStartSerializer
    ├── RentalCancelSerializer
    ├── RentalExtensionCreateSerializer
    ├── RentalPayDueSerializer
    ├── RentalIssueCreateSerializer
    ├── RentalLocationUpdateSerializer
    ├── RentalHistoryFilterSerializer
    └── RentalStatsSerializer

Total: 1 file, 14 serializers (1 categories)
